stages:
    - prepare
    - test

image: centos:7.6.1810

variables:
    DOCKER_DRIVER: overlay2
    LANG: 'en_US.UTF-8'
    CONDA_VERSION: '4.5.4'
    
.prepare_environment:
   cache:
     key: ${CI_PIPELINE_ID}-wms
     untracked: true
   
   before_script:
     - yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm https://centos7.iuscommunity.org/ius-release.rpm
     - yum install -y curl bzip2 which bc python36u python36u-devel python36u-setuptools python36u-pip ant openmpi-devel cppcheck numactl-devel
     - yum group install -y "Development Tools"  
     - export PATH=$PATH:/usr/lib64/openmpi/bin/
     - curl -LO https://repo.continuum.io/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh
     - bash Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh -b -p /usr/local/miniconda
     - export PATH=/usr/local/miniconda/bin:$PATH
     - conda update conda
     - conda install pip
     - git clone https://github.com/CNRGH/LodSeq.git lodseq
     - pushd lodseq/
     - curl -LO ftp://ftp.ncbi.nlm.nih.gov/hapmap/recombination/2011-01_phaseII_B37/genetic_map_HapMapII_GRCh37.tar.gz
     - mkdir -p data/inputs/genetic_map_HapMapII_GRCh37 
     - tar xf genetic_map_HapMapII_GRCh37.tar.gz -C data/inputs/genetic_map_HapMapII_GRCh37
     - popd

.test_genetic_data_with_snakemake: &test_genetic_data_with_snakemake
    stage: test 
    extends: .prepare_environment
    script:
        - pushd lodseq/
        - conda env create -n lodseq --file environment.yaml
        - snakemake_version=${CI_JOB_NAME/*-}
        - conda install -n lodseq -c conda-forge -c bioconda snakemake=${snakemake_version}=py36_0
        - source activate lodseq
        - mkdir test/
        - snakemake -v
        - snakemake --ignore-incomplete --reason --verbose --printshellcmds --timestamp  --configfile config.yaml
        - tar xf data/outputs/mergeResults.tar.gz -C data/outputs/
        - for f in $(ls test/mergeResults/results_*); do diff -q test/mergeResults/${f##*/} data/outputs/mergeResults/${f##*/}; done
        - popd

.test_genetic_data_with_nextflow: &test_genetic_data_with_nextflow
    stage: test 
    extends: .prepare_environment
    script:
        - pushd lodseq/ 
        - conda env create -n lodseq --file environment.yaml
        - nextflow_version=${CI_JOB_NAME/*-}
        - conda install -n lodseq -c bioconda nextflow=${nextflow_version}
        - source activate lodseq
        - nextflow -v
        - popd

.test_genetic_data_with_cromwell: &test_genetic_data_with_cromwell
    stage: test 
    extends: .prepare_environment
    script:
        - pushd lodseq/ 
        - conda env create -n lodseq --file environment.yaml
        - cromwell_version=${CI_JOB_NAME/*-}
        - conda install -n lodseq -c conda-forge -c bioconda openjdk=8 sbt scala
        - curl -LO https://github.com/broadinstitute/cromwell/releases/download/${cromwell_version}/cromwell-${cromwell_version}.jar
        - source activate lodseq
        - java -version
        - java -jar cromwell-${cromwell_version}.jar --version
        - popd

.test_genetic_data_with_cwltoil: &test_genetic_data_with_cwltoil
    stage: test 
    extends: .prepare_environment
    script:
        - pushd lodseq/ 
        - conda env create -n lodseq --file environment.yaml
        - toil_version=${CI_JOB_NAME/*-}
        - pip install toil[cwl]==${toil_version}
        - source activate lodseq
        - toil --version
        - cwltoil --version
        - popd

.test_genetic_data_with_pmc: &test_genetic_data_with_pmc
    stage: test 
    extends: .prepare_environment
    script:
        - DIR=$PWD
        - mkdir -p bin
        - which mpiexec
        - which mpirun
        #- alias mpiexec='mpiexec --allow-run-as-root' #not working
        - echo -e '#!/bin/bash\n/usr/lib64/openmpi/bin/mpiexec --allow-run-as-root "$@"' > bin/mpiexec
        - echo -e '#!/bin/bash\n/usr/lib64/openmpi/bin/mpirun --allow-run-as-root "$@"' > bin/mpirun
        - chmod u+x bin/mpiexec
        - chmod u+x bin/mpirun
        - export PATH="$PWD/bin:$PATH"
        - which mpiexec
        - which mpirun
        - pushd lodseq/ 
        - conda env create -n lodseq --file environment.yaml
        - popd
        - pmc_version=${CI_JOB_NAME/*-}
        - curl -LO https://github.com/pegasus-isi/pegasus/archive/${pmc_version}.tar.gz
        - tar -xf ${pmc_version}.tar.gz
        - pushd pegasus-${pmc_version}/src/tools/pegasus-mpi-cluster
        - ls -l /usr/lib64/openmpi/bin/
        - make
        #- make test  #error when runnning mpiexec
        - make install
        - popd
        - pegasus-mpi-cluster --version
        - pushd $DIR/lodseq/
        - source activate lodseq
        - popd

test_genetic_data_with_snakemake-4.8.0: *test_genetic_data_with_snakemake
test_genetic_data_with_nextflow-0.32.0: *test_genetic_data_with_nextflow
test_genetic_data_with_cromwell-36: *test_genetic_data_with_cromwell
test_genetic_data_with_cwltoil-3.18.0: *test_genetic_data_with_cwltoil
test_genetic_data_with_pmc-4.8.2: *test_genetic_data_with_pmc

