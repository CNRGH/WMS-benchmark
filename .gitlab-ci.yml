stages:
    - prepare
    - test

image: centos:7.6.1810

variables:
    DOCKER_DRIVER: overlay2
    LANG: 'en_US.UTF-8'
    CONDA_VERSION: '4.5.4'
    
.prepare_environment:
   cache:
     key: ${CI_PIPELINE_ID}-wms
     untracked: true
   
   before_script:
     - yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm https://centos7.iuscommunity.org/ius-release.rpm
     - yum install -y curl bzip2 which bc python36u python36u-devel python36u-setuptools python36u-pip ant openmpi-devel cppcheck numactl-devel graphviz nodejs
     - yum group install -y "Development Tools"  
     - export PATH=$PATH:/usr/lib64/openmpi/bin/
     - curl -LO https://repo.continuum.io/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh
     - bash Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh -b -p /usr/local/miniconda
     - export PATH=/usr/local/miniconda/bin:$PATH
     - conda update conda
     - conda install pip
     - git clone https://github.com/CNRGH/LodSeq.git lodseq
     - pushd lodseq/
     - curl -LO ftp://ftp.ncbi.nlm.nih.gov/hapmap/recombination/2011-01_phaseII_B37/genetic_map_HapMapII_GRCh37.tar.gz
     - mkdir -p data/inputs/genetic_map_HapMapII_GRCh37 
     - tar xf genetic_map_HapMapII_GRCh37.tar.gz -C data/inputs/genetic_map_HapMapII_GRCh37
     - popd

.test_genetic_data_with_snakemake: &test_genetic_data_with_snakemake
    stage: test 
    extends: .prepare_environment
    script:
        - pushd lodseq/
        - conda env create -n lodseq --file environment.yaml
        - snakemake_version=${CI_JOB_NAME/*-}
        - conda install -n lodseq -c conda-forge -c bioconda snakemake=${snakemake_version}=py36_0
        - source activate lodseq
        - mkdir test/
        - snakemake -v
        - YML=config.yaml
        # get dag
        - snakemake --configfile ${YML} --dag > ${YML}.dag.dot
        - snakemake --configfile ${YML} --rulegraph > ${YML}.rulegraph.dot
        - for DOT in "${YML}.dag.dot" "${YML}.rulegraph.dot"; do echo "${DOT}"; cat ${DOT}; dot -Tpdf ${DOT} > ${DOT}.pdf; done
        # run the snakemake workflow
        - snakemake --ignore-incomplete --reason --verbose --printshellcmds --timestamp  --configfile ${YML}
        - tar xf data/outputs/mergeResults.tar.gz -C data/outputs/
        - for f in $(ls test/mergeResults/results_*); do diff -q test/mergeResults/${f##*/} data/outputs/mergeResults/${f##*/}; done
        - popd

.test_genetic_data_with_nextflow: &test_genetic_data_with_nextflow
    stage: test 
    extends: .prepare_environment
    script:
        - pushd lodseq/
        - conda env create -n lodseq --file environment.yaml
        - nextflow_version=${CI_JOB_NAME/*-}
        - conda install -n lodseq -c bioconda nextflow=${nextflow_version}
        - source activate lodseq
        - mkdir test/
        - nextflow -v
        - ln -s ../workflows/nextflow/lodseq.nf lodseq.nf
        - ln -s ../workflows/nextflow/nextflow.CEPH1463.config nextflow.CEPH1463.config
        - DOT=lodseq.nf.dag.dot
        - export NXF_OPTS='-XX:ParallelGCThreads=2 -XX:CICompilerCount=2 -Xmx4g -Xms256m'
        # run the nextflow workflow and get workflow dag
        - nextflow run lodseq.nf -queue-size 1 -c nextflow.CEPH1463.config -work-dir $PWD/workdir -with-dag ${DOT}
        - cat ${DOT}
        - dot -Tpdf ${DOT} > ${DOT}.pdf
        - tar xf data/outputs/mergeResults.tar.gz -C data/outputs/
        - for f in $(ls test/mergeResults/results_*); do diff -q test/mergeResults/${f##*/} data/outputs/mergeResults/${f##*/}; done
        - popd

.test_genetic_data_with_cromwell: &test_genetic_data_with_cromwell
    stage: test 
    extends: .prepare_environment
    script:
        - pushd lodseq/ 
        - conda env create -n lodseq --file environment.yaml
        - cromwell_version=${CI_JOB_NAME/*-}
        - conda install -n lodseq -c conda-forge -c bioconda openjdk=8 sbt scala
        - curl -LO https://github.com/broadinstitute/cromwell/releases/download/${cromwell_version}/cromwell-${cromwell_version}.jar
        - curl -LO https://github.com/broadinstitute/cromwell/releases/download/${cromwell_version}/womtool-${cromwell_version}.jar
        - source activate lodseq
        - mkdir test/
        - CROMWELL="cromwell-${cromwell_version}.jar"
        - WOMTOOL="womtool-${cromwell_version}.jar"
        - java -version
        - java -jar ${CROMWELL} --version
        - java -jar ${WOMTOOL} --version
        - WDL=../workflows/cromwell/lodseq.wdl
        - JSON=../workflows/cromwell/lodseq_inputs_CEPH1463.json
        - sed -ie 's|\~|'"$PWD"'|g' ${JSON}
        - LOCAL_BACKEND=../workflows/cromwell/backends/local_1cpus_cromwell29.conf
        - cat ${JSON}
        # validate the WDL workflow
        - java -jar ${WOMTOOL} validate ${WDL}
        # validate workflow and inputs
        - java -jar ${WOMTOOL} validate --inputs ${JSON} ${WDL}
        # get dag
        - DOT=${WDL}.dot
        - java -jar ${WOMTOOL} graph ${WDL} > ${DOT}
        - dot -Tpdf ${DOT} > ${DOT}.pdf
        # run the WDL workflow
        - java -XX:ParallelGCThreads=2 -XX:CICompilerCount=2 -Xmx4g -Xms256m -Dconfig.file=${LOCAL_BACKEND} -jar ${CROMWELL} run ${WDL} -i ${JSON}
        - tar xf data/outputs/mergeResults.tar.gz -C data/outputs/
        - for f in $(ls test/mergeResults/results_*); do diff -q test/mergeResults/${f##*/} data/outputs/mergeResults/${f##*/}; done
        - popd

.test_genetic_data_with_cwltoil: &test_genetic_data_with_cwltoil
    stage: test 
    extends: .prepare_environment
    script:
        - pushd lodseq/
        - python --version
        # switch from python36 to python27 (due to error with python3.6 toil_v3.18.0 libraries)
        - conda install python=2.7
        - conda env create -n lodseq --file environment.yaml
        - toil_version=${CI_JOB_NAME/*-}
        - pip install toil[cwl]==${toil_version}
        - pip install cwlref-runner
        - source activate lodseq
        - python --version
        - toil --version
        - cwltoil --version
        - cwltool --version
        - OUTDIR=${PWD}/test 
        - mkdir -p ${OUTDIR}/WORKDIR ${OUTDIR}/TMPDIR_PREFIX ${OUTDIR}/TMP_OUTDIR_PREFIX
        - mkdir -p ~/WMS-benchmark/LodSeq
        - cp -pr scripts ~/WMS-benchmark/LodSeq/
        - cp -p ../workflows/cwltoil/*.cwl .
        - cp -p ../workflows/cwltoil/config_CEPH1463.yml .
        # specify absolute paths
        - YML=${PWD}/config_CEPH1463.yml
        - CWL=${PWD}/lodseq.cwl
        # replace relative path by absolute path in *.yml and *.cwl files
        #  otherwise cwltoil fails
        - sed -ie 's|\~|'"$PWD"'|g' ${YML}
        - sed -ie 's|\~|'"$HOME"'|g' *.cwl
        - cat ${YML}
        # validate a CWL file
        - cwltool --validate ${CWL}
        # get dag
        - DOT=${CWL}.dot
        - cwltool --print-dot ${CWL} > ${DOT}
        - cat ${DOT}
        - dot -Tpdf ${DOT} > ${DOT}.pdf
        # run the cwl workflow
        - | 
          cwltoil \
            --preserve-environment USER HOME \
            --workDir ${OUTDIR}/WORKDIR \
            --tmpdir-prefix ${OUTDIR}/TMPDIR_PREFIX \
            --tmp-outdir-prefix ${OUTDIR}/TMP_OUTDIR_PREFIX \
            --cleanWorkDir never \
            --clean never \
            --outdir ${OUTDIR} \
            --jobStore ${OUTDIR}/jobstore \
            --maxCores 1 \
            ${CWL} \
            ${YML}
        - tar xf data/outputs/mergeResults.tar.gz -C data/outputs/
        - for f in $(ls test/mergeResults/results_*); do diff -q test/mergeResults/${f##*/} data/outputs/mergeResults/${f##*/}; done
        - popd

.test_genetic_data_with_pmc: &test_genetic_data_with_pmc
    stage: test 
    extends: .prepare_environment
    script:
        - DIR=$PWD
        - mkdir -p bin
        - which mpiexec
        - which mpirun
        #- alias mpiexec='mpiexec --allow-run-as-root' #not working
        - echo -e '#!/bin/bash\n/usr/lib64/openmpi/bin/mpiexec --allow-run-as-root "$@"' > bin/mpiexec
        - echo -e '#!/bin/bash\n/usr/lib64/openmpi/bin/mpirun --allow-run-as-root "$@"' > bin/mpirun
        - chmod u+x bin/mpiexec
        - chmod u+x bin/mpirun
        - export PATH="$PWD/bin:$PATH"
        - which mpiexec
        - which mpirun
        - pushd lodseq/ 
        - conda env create -n lodseq --file environment.yaml
        - popd
        - pmc_version=${CI_JOB_NAME/*-}
        - curl -LO https://github.com/pegasus-isi/pegasus/archive/${pmc_version}.tar.gz
        - tar -xf ${pmc_version}.tar.gz
        - pushd pegasus-${pmc_version}/src/tools/pegasus-mpi-cluster
        - ls -l /usr/lib64/openmpi/bin/
        - make
        #- make test  #memory affinity error when runnning mpiexec or mpirun
        - make install
        - popd
        - pegasus-mpi-cluster --version
        - pushd $DIR/lodseq/
        - source activate lodseq
        - mkdir -p ~/benchmarkWMS
        - cp -pr scripts ~/benchmarkWMS
        - cp ../workflows/pegasus/mergeResultsByDir.sh ~/benchmarkWMS/scripts
        - cp -p ../workflows/pegasus/* .
        - OUTDIR=${PWD}/test
        - mkdir -p ${OUTDIR}
        - chmod u+x get_pegasus_lodseq_DAG.sh
        - DAG=lodseq_DAG_CEPH1463.dag
        - DOT=lodseq_DAG_CEPH1463.dot
        #generate PMC dag
        - |
          ./get_pegasus_lodseq_DAG.sh \
            -i ${PWD}/data/inputs/chr7_mdf.vcf.gz \
            -p ${PWD}/data/inputs/pedigree_mdf.tfam \
            -g ${PWD}/data/inputs/genetic_map_HapMapII_GRCh37/ \
            -D ${PWD}/data/inputs/parametric_dominant.model \
            -R ${PWD}/data/inputs/parametric_recessive.model \
            -c '7' \
            -o ${OUTDIR} \
            -s CEPH1463 \
            -l 1.3 \
            -t 1 \
            -d ${DOT} \
            > ${DAG} 
        - cat ${DAG}
        - cat ${DOT}
        - dot -Tpdf ${DOT} > ${DOT}.pdf
        # run PMC
        # --keep-affinity avoid memory affinity error
        - mpirun -oversubscribe -n 2 pegasus-mpi-cluster --keep-affinity ${DAG}
        - tar xf data/outputs/mergeResults.tar.gz -C data/outputs/
        - for f in $(ls test/mergeResults/results_*); do diff -q test/mergeResults/${f##*/} data/outputs/mergeResults/${f##*/}; done
        - popd

test_genetic_data_with_snakemake-4.8.0: *test_genetic_data_with_snakemake
test_genetic_data_with_nextflow-0.32.0: *test_genetic_data_with_nextflow
test_genetic_data_with_cromwell-36: *test_genetic_data_with_cromwell
test_genetic_data_with_cwltoil-3.18.0: *test_genetic_data_with_cwltoil
test_genetic_data_with_pmc-4.8.2: *test_genetic_data_with_pmc

